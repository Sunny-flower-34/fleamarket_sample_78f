
%section.Exhibition
  =link_to root_path do
    = image_tag "logo.png", size: "185x49", alt: "フリマのアイコン",class: "Exhibition__logo"
  .Exhibition__form
    = form_with(model: @product, local: true) do |f|
      - if @product.errors.any?
        #error_explanation
          %h2
            = pluralize(@product.errors.count, "error")
            prohibited this product from being saved:
          %ul
            - @product.errors.full_messages.each do |message|
              %li= message
      #image-box
        #previews
        - if @product.persisted?
          - @product.images.each_with_index do |image, i|
            = image_tag image.name.url, data: { index: i }, width: "100", height: '100'
        = f.fields_for :images do |image|
          .js-file_group{"data-index" => "#{image.index}"}
            = image.file_field :name, class: 'js-file'
            %br/
            %span.js-remove 削除
          - if @product.persisted?
            = image.check_box :_destroy, data:{ index: image.index }, class: 'hidden-destroy'
        - if @product.persisted?
          .js-file_group{"data-index" => "#{@product.images.count}"}
            = file_field_tag :name, name: "product[images_attributes][#{@product.images.count}][name]", class: 'js-file'
            .js-remove 削除
        - if @product.errors.include?(:name)
          %p{style: "color: red;"}= @product.errors.full_messages_for(:name).first
      %hr/
      .name-field.field
        .form-title
          %p.form-title__name 商品名
          %P.form-title__reqire 必須
        = f.text_field :name, placeholder: '20文字まで', class: "input-default"
        - if @product.errors.include?(:name)
          %p{style: "color: red;"}= @product.errors.full_messages_for(:name).first
        %br/
      .text-field.field
        .form-title
          %p.form-title__name 商品の説明
          %P.form-title__reqire 必須
        = f.text_area :text, placeholder: '商品の説明（必須　1,000文字以内）', class: "input-default"
        - if @product.errors.include?(:text)
          %p{style: "color: red;"}= @product.errors.full_messages_for(:text).first
        %br/
      %hr/
      .product-datas
        %p.info
          商品の詳細
          .info__category.field
            .form-title
              %p.form-title__name カテゴリー
              %P.form-title__reqire 必須   
            #{f.text_field :category_id, placeholder: '必須', class: "input-default"}
            - if @product.errors.include?(:category_id)
              %p{style: "color: red;"}= @product.errors.full_messages_for(:category_id).first
            %br/
          .info__status.field
            .form-title
              %p.form-title__name 商品の状態
              %P.form-title__reqire 必須   
            = f.select :condition, {'新品未使用': 1, '未使用に近い': 2, '目立った傷や汚れなし': 3, 'やや傷や汚れあり': 4, '傷や汚れあり': 5, '全体的に状態が悪い': 6}, { include_blank: '選択してください'}, {class: "input-default" , required: true }
            - if @product.errors.include?(:condition)
              %p{style: "color: red;"}= @product.errors.full_messages_for(:condition).first
            %br/
        %hr/
        %p.shipping
          発送について
          .shipping__postage.field
            .form-title
              %p.form-title__name 配送料の負担
              %P.form-title__reqire 必須   
            = f.select :postage, {'送料込み(あなたが負担)': '送料込み(あなたが負担)', '着払い(購入者が負担)': '着払い(購入者が負担)'}, { include_blank: '選択してください'}, { class: "input-default" , required: true }
            - if @product.errors.include?(:postage)
              %p{style: "color: red;"}= @product.errors.full_messages_for(:postage).first
            %br/
          .shipping__area.field
            .form-title
              %p.form-title__name 発送元の地域
              %P.form-title__reqire 必須   
            = f.text_field :area, placeholder: '必須', class: "input-default"
            - if @product.errors.include?(:area)
              %p{style: "color: red;"}= @product.errors.full_messages_for(:area).first
            %br/
          .shipping__days.field
            .form-title
              %p.form-title__name 発送までの日数
              %P.form-title__reqire 必須   
            = f.select :days, {'支払い後，１〜２日で発送': 1, '支払い後，2〜3日で発送': 2, '支払い後，4〜7日で発送': 3}, { include_blank: '選択してください'}, {class: "input-default",required: true }
            - if @product.errors.include?(:days)
              %p{style: "color: red;"}= @product.errors.full_messages_for(:days).first
            %br/
        %hr/
        %p.price
          %p 価格（￥300〜￥100,000）
          .price__date.field
            .form-title
              %p.form-title__name 販売価格
              %P.form-title__reqire 必須   
            = f.number_field :price, placeholder: '0', class: "input-default"
            - if @product.errors.include?(:price)
              %p{style: "color: red;"}= @product.errors.full_messages_for(:price).first
            %br/
      .product-submit.field
        = f.submit "出品する", class: "Exhibitionーbutton submit"

    -# fields_forメソッドを利用する際に、親モデルの中に書く必要があるメソッドとして、”accepts_nested_attributes_for”がある。
    -# form_forメソッドを使用して、ネストの関係性でfields_forを利用してあげる。そうする事で、image画像を追加するためのfile_fieldメソッドを使用する事ができる。


